#!/bin/bash

# –°–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–ª–∏–∑–∞ –Ω–∞ GitHub
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./create_release.sh <version> <description>

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
print_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
if [ $# -lt 1 ]; then
    print_error "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –≤–µ—Ä—Å–∏—é —Ä–µ–ª–∏–∑–∞!"
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <version> [description]"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 v2.1.5"
    echo "  $0 v2.1.5 \"–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ —É–ª—É—á—à–µ–Ω–∏—è\""
    echo "  $0 v2.1.5 \"–ù–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ç—Ä–∞—Ñ–∏–∫–∞\""
    exit 1
fi

VERSION="$1"
DESCRIPTION="${2:-Release $VERSION}"

print_info "–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞ $VERSION..."

# –ü–µ—Ä–µ—Ö–æ–¥ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
cd /root/vpn-server

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –º—ã –≤ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
if [ ! -d ".git" ]; then
    print_error "–ù–µ –Ω–∞–π–¥–µ–Ω git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π!"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
if [ -n "$(git status --porcelain)" ]; then
    print_warning "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è!"
    print_info "–°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è..."
    git add -A
    git commit -m "üöÄ $VERSION: $DESCRIPTION"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã
print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å GitHub..."
git fetch origin
if [ "$(git rev-parse HEAD)" != "$(git rev-parse origin/main)" ]; then
    print_warning "–õ–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —Å GitHub!"
    print_info "–ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è..."
    git push origin main
fi

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–≥–∞
print_info "–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–≥–∞ $VERSION..."
if git tag -l | grep -q "^$VERSION$"; then
    print_warning "–¢–µ–≥ $VERSION —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!"
    print_info "–£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç–µ–≥..."
    git tag -d "$VERSION"
    git push origin :refs/tags/"$VERSION"
fi

git tag -a "$VERSION" -m "$DESCRIPTION"

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–≥–∞
print_info "–ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–≥–∞ –Ω–∞ GitHub..."
git push origin "$VERSION"

# –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ –¥–ª—è —Ä–µ–ª–∏–∑–∞
print_info "–°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ —Ä–µ–ª–∏–∑–∞..."
ARCHIVE_NAME="vpn-server-$VERSION.tar.gz"
tar --exclude='.git' --exclude='venv' --exclude='__pycache__' --exclude='*.pyc' \
    -czf "/tmp/$ARCHIVE_NAME" .

print_success "–†–µ–ª–∏–∑ $VERSION —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!"
print_info "–ê—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω: /tmp/$ARCHIVE_NAME"
print_info "–¢–µ–≥ –∑–∞–≥—Ä—É–∂–µ–Ω: $VERSION"

echo ""
print_info "–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–ª–∏–∑–∞ –Ω–∞ GitHub:"
echo "1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://github.com/merdocx/veil-v2ray/releases"
echo "2. –ù–∞–∂–º–∏—Ç–µ 'Create a new release'"
echo "3. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–≥: $VERSION"
echo "4. –ó–∞–≥–æ–ª–æ–≤–æ–∫: $VERSION"
echo "5. –û–ø–∏—Å–∞–Ω–∏–µ: $DESCRIPTION"
echo "6. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∞—Ä—Ö–∏–≤: /tmp/$ARCHIVE_NAME"
echo "7. –ù–∞–∂–º–∏—Ç–µ 'Publish release'"

print_info "–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ GitHub CLI (–µ—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω):"
echo "gh release create $VERSION /tmp/$ARCHIVE_NAME --title '$VERSION' --notes '$DESCRIPTION'"

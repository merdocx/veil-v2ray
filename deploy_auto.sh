#!/bin/bash

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è VPN —Å–µ—Ä–≤–µ—Ä–∞
# –í–µ—Ä—Å–∏—è: 2.1.4
# –î–∞—Ç–∞: 2025-10-22
# Xray –≤–µ—Ä—Å–∏—è: v25.10.15

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
print_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ root
if [ "$EUID" -ne 0 ]; then
    print_error "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å –ø—Ä–∞–≤–∞–º–∏ root: sudo $0"
    exit 1
fi

print_info "=== –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ VPN —Å–µ—Ä–≤–µ—Ä–∞ v2.1.4 ==="

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
VPN_DIR="/root/vpn-server"
XRAY_VERSION="25.10.15"
API_KEY=$(openssl rand -base64 32)

print_info "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞: $VPN_DIR"
print_info "–í–µ—Ä—Å–∏—è Xray: $XRAY_VERSION"
print_info "API –∫–ª—é—á: $API_KEY"

# –®–∞–≥ 1: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
print_info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."
apt update && apt upgrade -y

# –®–∞–≥ 2: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
print_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
apt install -y curl wget git python3 python3-pip python3-venv nginx unzip openssl

# –®–∞–≥ 3: –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
print_info "–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞..."
mkdir -p $VPN_DIR
cd $VPN_DIR

# –®–∞–≥ 4: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Xray
print_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Xray v$XRAY_VERSION..."
cd /tmp
ARCH=$(uname -m)
case $ARCH in
    x86_64) ARCH="64";;
    aarch64) ARCH="arm64-v8a";;
    armv7l) ARCH="arm32-v7a";;
    *) print_error "–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $ARCH"; exit 1;;
esac

wget -q "https://github.com/XTLS/Xray-core/releases/download/v$XRAY_VERSION/Xray-linux-$ARCH.zip"
unzip -q "Xray-linux-$ARCH.zip"
cp xray /usr/local/bin/
chmod +x /usr/local/bin/xray
rm -f "Xray-linux-$ARCH.zip" xray

print_success "Xray —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(/usr/local/bin/xray version | head -1)"

# –®–∞–≥ 5: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Python –æ–∫—Ä—É–∂–µ–Ω–∏—è
print_info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Python –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
cd $VPN_DIR
python3 -m venv venv
source venv/bin/activate

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
pip install -q fastapi==0.116.1 uvicorn[standard]==0.35.0 pydantic==2.11.7 python-multipart==0.0.20 requests==2.32.4 psutil==5.9.6

# –®–∞–≥ 6: –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞
print_info "–°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞..."

# –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
cat > .env << EOF
# VPN API Configuration
VPN_API_KEY=$API_KEY
VPN_ENABLE_HTTPS=true
VPN_SSL_CERT_PATH=/etc/ssl/certs/vpn-api.crt
VPN_SSL_KEY_PATH=/etc/ssl/private/vpn-api.key
VPN_HOST=0.0.0.0
VPN_PORT=8000
VPN_WORKERS=1
VPN_LOG_LEVEL=info
VPN_LOG_FILE=$VPN_DIR/logs/api.log
EOF

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
mkdir -p config logs

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
print_info "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤..."
mkdir -p /etc/ssl/certs /etc/ssl/private
openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
    -keyout /etc/ssl/private/vpn-api.key \
    -out /etc/ssl/certs/vpn-api.crt \
    -subj "/C=US/ST=State/L=City/O=Organization/CN=localhost" \
    -quiet

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Reality –∫–ª—é—á–µ–π
print_info "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è Reality –∫–ª—é—á–µ–π..."
/usr/local/bin/xray x25519 > reality_keys.txt
PRIVATE_KEY=$(cat reality_keys.txt | grep "Private key:" | cut -d' ' -f3)
SHORT_ID=$(openssl rand -hex 8)
rm -f reality_keys.txt

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Xray
cat > config/config.json << EOF
{
  "log": {
    "loglevel": "info",
    "access": "$VPN_DIR/logs/xray-access.log",
    "error": "$VPN_DIR/logs/xray-error.log"
  },
  "inbounds": [
    {
      "listen": "0.0.0.0",
      "port": 443,
      "protocol": "vless",
      "settings": {
        "clients": [],
        "decryption": "none"
      },
      "streamSettings": {
        "network": "tcp",
        "security": "reality",
        "realitySettings": {
          "show": false,
          "dest": "www.microsoft.com:443",
          "xver": 0,
          "serverNames": [
            "www.microsoft.com"
          ],
          "privateKey": "$PRIVATE_KEY",
          "shortIds": [
            "$SHORT_ID"
          ]
        }
      }
    }
  ],
  "outbounds": [
    {
      "protocol": "freedom",
      "settings": {}
    }
  ]
}
EOF

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤ –¥–∞–Ω–Ω—ã—Ö
echo '[]' > config/keys.json
echo "{\"used_ports\": {}, \"port_assignments\": {}, \"created_at\": \"$(date -Iseconds)\", \"last_updated\": \"$(date -Iseconds)\"}" > config/ports.json
echo '{"keys": {}, "daily_stats": {}, "monthly_stats": {}}' > config/traffic_history.json

# –®–∞–≥ 7: –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–æ–≤
print_info "–°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–æ–≤..."

# Xray —Å–µ—Ä–≤–∏—Å
cat > /etc/systemd/system/xray.service << 'EOF'
[Unit]
Description=Xray Service
Documentation=https://github.com/xtls
After=network.target nss-lookup.target

[Service]
Type=simple
User=root
ExecStart=/usr/local/bin/xray run -config /root/vpn-server/config/config.json
Restart=on-failure
RestartSec=5s
LimitNOFILE=1048576

[Install]
WantedBy=multi-user.target
EOF

# VPN API —Å–µ—Ä–≤–∏—Å
cat > /etc/systemd/system/vpn-api.service << EOF
[Unit]
Description=VPN Key Management API
After=network.target

[Service]
Type=simple
User=root
WorkingDirectory=$VPN_DIR
Environment=PATH=$VPN_DIR/venv/bin
ExecStart=$VPN_DIR/venv/bin/python $VPN_DIR/api.py
Restart=always
RestartSec=5s

[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reload
systemctl enable xray vpn-api

# –®–∞–≥ 8: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞
print_info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞..."
if command -v ufw >/dev/null 2>&1; then
    ufw allow 22/tcp
    ufw allow 443/tcp
    ufw allow 8000/tcp
    ufw --force enable
elif command -v firewall-cmd >/dev/null 2>&1; then
    firewall-cmd --permanent --add-port=22/tcp
    firewall-cmd --permanent --add-port=443/tcp
    firewall-cmd --permanent --add-port=8000/tcp
    firewall-cmd --reload
fi

# –®–∞–≥ 9: –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
print_info "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
systemctl start xray vpn-api

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
sleep 5

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
if systemctl is-active --quiet xray && systemctl is-active --quiet vpn-api; then
    print_success "–í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ"
else
    print_error "–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤"
    systemctl status xray vpn-api
    exit 1
fi

# –®–∞–≥ 10: –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ health check
if curl -k -s https://localhost:8000/health | grep -q "healthy"; then
    print_success "Health check —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    print_warning "Health check –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
fi

# –§–∏–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
print_success "=== –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê ==="
echo ""
print_info "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ:"
print_info "  API URL: https://$(curl -s ifconfig.me):8000"
print_info "  API –∫–ª—é—á: $API_KEY"
print_info "  Reality Private Key: $PRIVATE_KEY"
print_info "  Reality Short ID: $SHORT_ID"
echo ""
print_info "–ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
print_info "  –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤: systemctl status xray vpn-api"
print_info "  –õ–æ–≥–∏ Xray: journalctl -u xray -f"
print_info "  –õ–æ–≥–∏ API: journalctl -u vpn-api -f"
print_info "  Health check: curl -k https://localhost:8000/health"
echo ""
print_info "–°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –∫–ª—é—á–∞:"
print_info "  curl -k -X POST -H 'Content-Type: application/json' \\"
print_info "       -H 'X-API-Key: $API_KEY' \\"
print_info "       -d '{\"name\": \"test@example.com\"}' \\"
print_info "       https://localhost:8000/api/keys"
echo ""
print_success "VPN —Å–µ—Ä–≤–µ—Ä –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é! üöÄ"
